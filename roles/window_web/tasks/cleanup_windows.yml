- name: Lấy danh sách các tính năng IIS đã cài đặt
  win_feature:
    name: Web-Server
  register: iis_installed


- name: Cài đặt Windows Process Activation Service (WAS) nếu chưa có
  win_feature:
    name:
      - WAS
      - WAS-Process-Model
      - WAS-Net-Environment
      - WAS-Config-APIs
    state: present
    include_management_tools: yes
  register: was_installed


- name: Cài đặt IIS nếu chưa có
  win_feature:
    name: 
      - Web-Server
      - Web-Common-Http
      - Web-Static-Content
      - Web-Default-Doc
      - Web-Dir-Browsing
      - Web-Http-Errors
      - Web-App-Dev
      - Web-CGI
      - Web-ISAPI-Ext
      - Web-ISAPI-Filter
      - Web-Security
      - Web-Filtering
      - Web-Mgmt-Console
    state: present
    include_management_tools: yes
  register: iis_install

- name: Kiểm tra kết quả cài đặt IIS
  debug:
    var: iis_install

- name: Kiểm tra xem dịch vụ W3SVC đã tồn tại chưa
  win_service:
    name: W3SVC
  register: w3svc_status
  ignore_errors: true

- name: Khởi động lại WAS (để đảm bảo IIS có thể chạy)
  ansible.windows.win_service:
    name: WAS
    state: restarted
    force_dependent_services: yes
  when: was_installed.changed

- name: Dừng IIS trước khi xóa thư mục web_root (nếu W3SVC tồn tại)
  win_service:
    name: W3SVC
    state: stopped
  when: w3svc_status.exists

- name: Xóa thư mục web_root nếu tồn tại
  win_file:
    path: "{{ web_root }}"
    state: absent

- name: Khởi động lại IIS sau khi xóa thư mục (nếu W3SVC tồn tại)
  win_service:
    name: W3SVC
    state: started
  when: w3svc_status.exists

# - name: Kiểm tra IIS có chạy không bằng truy vấn HTTP
#   win_uri:
#     url: http://localhost
#     method: GET
#   register: iis_response
#   ignore_errors: true

- name: Hiển thị kết quả kiểm tra IIS
  debug:
    msg: "IIS đang chạy thành công!" 
  when: iis_response.status_code is defined and iis_response.status_code == 200

- name: Kiểm tra và hiển thị phiên bản .NET Framework
  win_shell: |
    # Lấy giá trị của Release key từ registry để xác định phiên bản .NET Framework
    $release = (Get-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full').Release
    if ($release -ge 528040) {
      Write-Output "Phiên bản .NET Framework hiện tại: 4.8"
    } elseif ($release -ge 461808) {
      Write-Output "Phiên bản .NET Framework hiện tại: 4.7.2"
    } elseif ($release -ge 460798) {
      Write-Output "Phiên bản .NET Framework hiện tại: 4.7.1"
    } elseif ($release -ge 394802) {
      Write-Output "Phiên bản .NET Framework hiện tại: 4.7"
    } elseif ($release -ge 394254) {
      Write-Output "Phiên bản .NET Framework hiện tại: 4.6.2"
    } elseif ($release -ge 393295) {
      Write-Output "Phiên bản .NET Framework hiện tại: 4.6.1"
    } elseif ($release -ge 379893) {
      Write-Output "Phiên bản .NET Framework hiện tại: 4.6"
    } elseif ($release -ge 378675) {
      Write-Output "Phiên bản .NET Framework hiện tại: 4.5.2"
    } elseif ($release -ge 378389) {
      Write-Output "Phiên bản .NET Framework hiện tại: 4.5.1"
    } elseif ($release -ge 378140) {
      Write-Output "Phiên bản .NET Framework hiện tại: 4.5"
    } else {
      Write-Output "Không xác định được phiên bản .NET Framework"
    }
  register: net_framework_version
  ignore_errors: true

- name: Hiển thị phiên bản .NET Framework
  debug:
    msg: "{{ net_framework_version.stdout }}"
  when: net_framework_version.stdout is defined

- name: Hiển thị danh sách các website trong IIS
  win_shell: |
    Import-Module WebAdministration;
    Get-Website | Select-Object -ExpandProperty Name
  register: iis_sites_list

- name: Hiển thị danh sách website hiện có
  debug:
    msg: "{{ iis_sites_list.stdout_lines }}"

- name: Xóa website trong IIS nếu tồn tại
  win_iis_website:
    name: "{{ item }}"
    state: absent
  ignore_errors: true
  loop:
    - "{{ iis_site_name }}"
    - "Default Web Site"
  when: item in iis_sites_list.stdout_lines

- name: Tạo thư mục webroot
  win_file:
    path: "{{ web_root }}"
    state: directory

- name: Tải source code từ GitHub
  win_get_url:
    url: "{{ repo_url }}"
    dest: "{{ zip_dest }}"

- name: Giải nén source code
  win_unzip:
    src: "{{ zip_dest }}"
    dest: "{{ web_root }}"
    remote_src: yes
  register: unzip_result

- name: Di chuyển nội dung từ ansible-web-main vào thư mục webroot
  win_shell: |
    Move-Item -Path "{{ web_root }}\ansible-web-main\*" -Destination "{{ web_root }}" -Force
    Remove-Item -Path "{{ web_root }}\ansible-web-main" -Recurse -Force
  args:
    executable: powershell.exe
  when: ansible_facts['os_family'] == "Windows"

- name: Xóa file source code zip_dest 
  win_file:
    path: "{{ zip_dest }}"
    state: absent

### KIỂM TRA VÀ CÀI ĐẶT CHOCOLATEY ###
- name: Kiểm tra Chocolatey đã cài đặt chưa
  win_stat:
    path: C:\ProgramData\chocolatey\bin\choco.exe
  register: choco_status

- name: Cài đặt Chocolatey nếu chưa có
  win_shell: |
    Set-ExecutionPolicy Bypass -Scope Process -Force; 
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; 
    iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
  when: not choco_status.stat.exists

### KIỂM TRA VÀ CÀI ĐẶT MYSQL & PHP ###
- name: Lấy danh sách phần mềm cài đặt qua Chocolatey
  win_shell: choco list
  register: choco_list

- name: Kiểm tra MySQL và PHP đã có trong Chocolatey chưa
  set_fact:
    mysql_installed: "{{ 'mysql' in choco_list.stdout }}"
    php_installed: "{{ 'php' in choco_list.stdout }}"

- name: Cài đặt MySQL và PHP nếu chưa có
  win_chocolatey:
    name: "{{ item.name }}"
    version: "{{ item.version | default(omit) }}"
    state: present
  loop:
    - { name: "mysql", version: "8.4.4" }
    - { name: "php", version: "8.4.4" }
  when: "not (item.name + '_installed') | bool"

### LẤY ĐƯỜNG DẪN MYSQL & PHP ###
- name: Lấy đường dẫn chính xác của MySQL và PHP
  win_shell: |
    (Get-Command {{ item }}).Source
  register: bin_paths
  loop:
    - mysql
    - php
  when: vars[item + '_installed'] is defined and vars[item + '_installed']

- name: Đặt biến đường dẫn MySQL và PHP
  set_fact:
    mysql_bin: "{{ bin_paths.results | selectattr('item', 'equalto', 'mysql') | map(attribute='stdout') | first | default('') | trim }}"
    php_bin: "{{ bin_paths.results | selectattr('item', 'equalto', 'php') | map(attribute='stdout') | first | default('') | trim }}"

### Kiểm tra và hiển thị kết quả ###
- name: Hiển thị đường dẫn MySQL và PHP
  debug:
    msg:
      - "Đường dẫn MySQL: {{ mysql_bin | default('Không tìm thấy') }}"
      - "Đường dẫn PHP: {{ php_bin | default('Không tìm thấy') }}"

- name: Thêm MySQL và PHP vào PATH 
  win_path:
    elements:
      - "{{ mysql_bin }}"
      - "{{ php_bin }}"
    state: present

- name: Lấy danh sách các đường dẫn trong PATH
  win_shell: '[System.Environment]::GetEnvironmentVariable("Path", "Machine") -split ";"'
  register: current_path

- name: Hiển thị PATH hiện tại
  debug:
    msg: "{{ current_path.stdout_lines }}"

### CẤU HÌNH MYSQL ###
- name: Kiểm tra MySQL đã cài đặt hay chưa
  win_shell: "{{ mysql_bin }} --version"
  register: mysql_version
  ignore_errors: true
- name: Đặt lại mật khẩu cho root
  win_command: >
    cmd.exe /c ""{{ mysql_bin }}" -u root -ppassword -e "ALTER USER 'root'@'localhost' IDENTIFIED BY 'password'; FLUSH PRIVILEGES;""
  when: mysql_version.rc == 0

  
- name: Kiểm tra lại user root
  win_command: >
    cmd.exe /c ""{{ mysql_bin }}" -u root -ppassword -e "SELECT user, host, plugin FROM mysql.user WHERE user='root';""

- name: Cấp quyền đầy đủ cho root
  win_command: >
    cmd.exe /c ""{{ mysql_bin }}" -u root -ppassword -e "GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' WITH GRANT OPTION; FLUSH PRIVILEGES;""
  when: mysql_version.rc == 0

- name: Xóa database test_db nếu tồn tại
  win_command: >
    cmd.exe /c ""{{ mysql_bin }}" -u root -ppassword -e "DROP DATABASE IF EXISTS test_db;""  
  when: mysql_version.rc == 0

- name: Tạo database nếu chưa tồn tại
  win_command: >
    cmd.exe /c ""{{ mysql_bin }}" -u root -ppassword -e "CREATE DATABASE IF NOT EXISTS test_db;""
  when: mysql_version.rc == 0

- name: Import database nếu MySQL hoạt động
  win_command: >
    cmd.exe /c ""{{ mysql_bin }}" -u root -ppassword test_db < "{{ web_root }}\\test_db.sql""
  register: db_import
  when: mysql_version.rc == 0
  ignore_errors: true


- name: Kiểm tra kết quả import database
  debug:
    msg: >
      {% if db_import is defined and db_import.rc == 0 %}
        Import database thành công!
      {% elif db_import is defined %}
        Lỗi import database: {{ db_import.stderr }}
      {% else %}
        Task import database đã bị bỏ qua.
      {% endif %}


### CẤU HÌNH PHP ###
- name: Đảm bảo thư mục PHP tồn tại
  win_file:
    path: C:\php
    state: directory

- name: Copy file php.ini
  win_copy:
    src: files/php.ini
    dest: C:\php\php.ini

- name: Cấu hình biến môi trường PHPRC
  win_shell: "[System.Environment]::SetEnvironmentVariable('PHPRC', 'C:\\php', 'Machine')"
  args:
    executable: powershell


# - name: Kiểm tra và kích hoạt tính năng Static Content trên IIS
#   win_shell: |
#     # Kiểm tra xem tính năng IIS-StaticContent đã được kích hoạt chưa
#     $featureStatus = (Get-WindowsFeature -Name IIS-StaticContent).Installed

#     if ($featureStatus -eq $false) {
#         Write-Output "IIS-StaticContent chưa được kích hoạt. Kích hoạt tính năng..."
#         Dism /online /Enable-Feature /FeatureName:IIS-StaticContent
#     } else {
#         Write-Output "IIS-StaticContent đã được kích hoạt."
#     }
#   register: static_content_status

# - name: In kết quả trạng thái của IIS-StaticContent
#   debug:
#     msg: "{{ static_content_status.stdout }}"



- name: Copy script cấu hình PHP vào Desktop
  win_copy:
    src: files/configure_php_iis.ps1
    dest: C:\Users\Administrator\Desktop\configure_php_iis.ps1


- name: Thực thi script cấu hình PHP
  win_shell: "powershell.exe -ExecutionPolicy Bypass -File C:\\Users\\Administrator\\Desktop\\configure_php_iis.ps1"

- name: Tạo Application Pool cho PHP
  ansible.windows.win_shell: |
    New-WebAppPool -Name "AnsibleWebPool"
    Set-ItemProperty IIS:\AppPools\AnsibleWebPool -Name managedRuntimeVersion -Value ""
    Set-ItemProperty IIS:\AppPools\AnsibleWebPool -Name enable32BitAppOnWin64 -Value True
    Set-ItemProperty IIS:\AppPools\AnsibleWebPool -Name processModel.identityType -Value "ApplicationPoolIdentity"

- name: Cấu hình website trong IIS
  community.windows.win_iis_website:
    name: "{{ iis_site_name }}"
    state: started
    physical_path: "{{ web_root }}"
    port: "{{ iis_port }}"
    hostname: "{{ iis_hostname }}"
    ip: "{{ iis_ip }}"
    application_pool: AnsibleWebPool  # Đồng bộ với tên Application Pool ở trên

- name: Xóa tất cả binding hiện có của site "{{ iis_site_name }}"
  community.windows.win_iis_webbinding:
    name: "{{ iis_site_name }}"
    state: absent
  register: binding_cleanup
  ignore_errors: true

- name: Thêm IIS binding mới (*:{{ iis_port }}:)
  community.windows.win_iis_webbinding:
    name: "{{ iis_site_name }}"
    protocol: http
    port: "{{ iis_port }}"
    ip: "*"
    state: present

# - name: Lấy trạng thái hiện tại của Directory Browsing
#   win_shell: |
#     $status = (Get-WebConfigurationProperty -filter "/system.webServer/directoryBrowse" -name "enabled" -PSPath "IIS:\Sites\{{ iis_site_name }}").Value
#     Write-Output $status
#   register: directory_browsing_status
  
# - name: Bật Directory Browsing nếu nó bị tắt
#   win_shell: |
#     Set-WebConfigurationProperty -filter "/system.webServer/directoryBrowse" -name "enabled" -value "True" -PSPath "IIS:\Sites\{{ iis_site_name }}"
#   when: directory_browsing_status.stdout == 'False'
  
# - name: Hiển thị thông báo bật Directory Browsing
#   debug:
#     msg: "Directory Browsing đã bị tắt và đã được bật."
#   when: directory_browsing_status.stdout == 'False'
  
# - name: Bỏ qua nếu Directory Browsing đã được bật
#   debug:
#     msg: "Directory Browsing đã được bật sẵn."
#   when: directory_browsing_status.stdout == 'True'

- name: Bật Directory Browsing 
  win_shell: |
    Set-WebConfigurationProperty -filter "/system.webServer/directoryBrowse" -name "enabled" -value "True" -PSPath "IIS:\Sites\{{ iis_site_name }}"

- name: Đảm bảo IIS và các dịch vụ liên quan đang chạy
  ansible.windows.win_service:
    name: "{{ item }}"
    state: started
  loop:
    - W3SVC
    - WAS

- name: Restart IIS để áp dụng cấu hình mới
  ansible.windows.win_shell: iisreset
